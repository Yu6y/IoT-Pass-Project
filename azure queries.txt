-- 1 
select 
System.Timestamp() as windowEndTime,
round((cast(sum(GoodCount) as float) / (sum(GoodCount) + sum(BadCount))), 2) * 100 as productionkpis,
DeviceId
into [Production-KPIs]
from iot timestamp by IoTHub.EnqueuedTime
where BadCount > 0 and GoodCount > 0
group by
DeviceId,
TumblingWindow(minute, 5)

--2
select 
System.Timestamp() as windowEndTime,
max(Temperature) as maxTemperature,
min(Temperature) as minTemperature,
avg(Temperature) as avgTemperature,
DeviceId
into [temperatures-Storage]
from iot timestamp by IoTHub.EnqueuedTime
group by DeviceId,
HoppingWindow(minute, 5, 1);

--3
select System.Timestamp() as windowEndTime,
count(*) as errorsCount,
Body.DeviceId
into [Device-Errors]
from [route-errors] timestamp by Body.Timestamp
group by 
Body.DeviceId,
TumblingWindow(minute, 1)
having count(*) > 3

-- queries for functions

-- 1 EmergencyStop
select SystemProperties.connectionDeviceId AS DeviceId, 
Body.DeviceId AS TargetMachine
into [EmergencyStopFunction]
from [route-errors] timestamp by Body.Timestamp
group by
Body.DeviceId,
SystemProperties.connectionDeviceId,
TumblingWindow(minute, 1)
having COUNT(*) > 3

-- 2 ProductionRate
select 
round((cast(sum(GoodCount) as float) / (sum(GoodCount) + sum(BadCount))), 2) * 100 as productionKpis,
DeviceId as TargetMachine,
IoTHub.ConnectionDeviceId as DeviceId
into [UpdateProductionRateFunction]
from iot timestamp by IoTHub.EnqueuedTime
where BadCount > 0 and GoodCount > 0
group by
IoTHub.ConnectionDeviceId,
DeviceId,
TumblingWindow(minute, 5)

-- 3 SendMail
select SystemProperties.connectionDeviceId AS DeviceId,
Body.Errors AS ErrorList,
Body.Timestamp
into [SendEmailProxy]
from [route-errors] timestamp by Body.Timestamp
where Body.Errors IS NOT NULL 


